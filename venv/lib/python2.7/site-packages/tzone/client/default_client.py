#!/usr/bin/env python
# encoding: utf-8

from .clientproxy import ClientProxy
from .discover import Discoverer

DEFAULT_TIMEOUT = 0.2  # timeout 单位为秒


class BaseClient(object):

    def __init__(self, host=None, port=None, target_name=None,
                 services=None, timeout=None, strict=True, proxy_class=ClientProxy):

        self._discover = Discoverer(target_name, host, port)
        self._timeout = timeout or DEFAULT_TIMEOUT
        self._strict = strict
        self._proxy_class = proxy_class
        self._services = {}
        for service in services:
            service_name = service.__name__.split('.')[-1]
            self._services[service_name] = service

    def __getattr__(self, service_name):
        try:
            service = self._services[service_name]
            client = self._proxy_class(service, self._discover, self._timeout, self._strict)
            return client
        except AttributeError:
            raise


class Client(BaseClient):
    pass
