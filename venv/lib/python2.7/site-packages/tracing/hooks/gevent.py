#!/usr/bin/env python
# coding: utf-8

from wrapt.wrappers import wrap_function_wrapper


from tracing.request_context import get_current_span, RequestContextManager


def _wrapper_greenlet__init__(wrapped, instance, args, kwargs):
    span = get_current_span()
    instance._tc_span = span
    return wrapped(*args, **kwargs)


def _wrapper_greenlet_run(wrapped, instance, args, kwargs):
    span = getattr(instance, "_tc_span", None)
    if span is not None:
        with RequestContextManager(span):
            return wrapped(*args, **kwargs)
    return wrapped(*args, **kwargs)


def instrument_gevent_greenlet(module):
    wrap_function_wrapper(module, 'Greenlet.__init__', _wrapper_greenlet__init__)
    wrap_function_wrapper(module, 'Greenlet.run', _wrapper_greenlet_run)
